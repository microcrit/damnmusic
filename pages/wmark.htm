<!DOCTYPE html>
<html>

<head>
    <title>Watermark</title>
    <meta charset="UTF-8">
    <script src="https://cdn.socket.io/4.7.2/socket.io.min.js"></script>
</head>

<body style="margin:0; padding:0; overflow:hidden; position: relative;">
    <div id="watermark-container"
        style="position:absolute; top:0; left:0; width:100%; height:100%; text-align: center; align-items: center; display: flex;">
        <div id="current-slide"
            style="position:absolute; top:50%; left:50%; width:100%; height:100%; background-size:contain; background-repeat:no-repeat; background-position:center; pointer-events:none; transition: opacity 0.5s ease-in-out, transform 0.5s ease-in-out; display:flex; align-items:center; font-size: min(10vw, 15vh); color:white;">
        </div>
        <div id="next-slide"
            style="position:absolute; top:50%; left:50%; width:100%; height:100%; background-size:contain; background-repeat:no-repeat; background-position:center; pointer-events:none; opacity:0; transition: opacity 0.5s ease-in-out, transform 0.5s ease-in-out; display:flex; align-items:center; font-size: min(10vw, 15vh); color:white;">
        </div>
    </div>
    <style>
        body {
            background-color: transparent;
            overflow: hidden;
            padding: 30px;
            box-sizing: border-box;
            display: flex;
            flex-direction: column;
            align-items: center;
            text-align: center;
            justify-content: center;
            width: 100vw;
            height: 100vh;
        }

        .text-slide {
            background: linear-gradient(45deg, #00a6ff, #c800ff);
            background-clip: text;
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            font-family: 'Arial Black', sans-serif;
            text-shadow: 5px 5px 0px rgba(255, 0, 0, 0.7);
            text-align: center;
            align-items: center;
            align-self: center;
            vertical-align: middle;
            position: absolute;
            top: 50% !important;
            left: 50% !important;
            transform: translate(-50%, -50%);
            width: 100%;
            height: 100%;
        }



        #current-slide,
        #next-slide {
            justify-content: center;
            text-align: center;
            align-items: center;
            display: flex;
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            transform-origin: center;
        }
    </style>
    <script>
        const socket = io();
        let currentSlide = document.getElementById('current-slide');
        let nextSlide = document.getElementById('next-slide');
        let slides = ['/static/wmark.png'];
        let currentIndex = 0;
        let intervalId;

        setSlideContent(currentSlide, slides[0]);

        currentSlide.style.opacity = '1';
        nextSlide.style.opacity = '0';
        currentSlide.style.transform = 'translate(-50%, -50%) scale(1)';
        nextSlide.style.transform = 'translate(-50%, -50%) scale(0.9)';

        function isImage(slide) {
            return slide.endsWith('.png') || slide.endsWith('.jpg') || slide.endsWith('.jpeg') || slide.endsWith('.gif');
        }

        function getImageUrl(slide) {
            if (slide.startsWith('/static/')) {
                return slide;
            } else if (slide.startsWith('http')) {
                return slide;
            } else {
                return '/static/' + slide;
            }
        }

        function setSlideContent(element, slide) {
            if (isImage(slide)) {
                element.classList.remove('text-slide');
                element.style.background = '';
                element.style.backgroundImage = `url('${getImageUrl(slide)}')`;
                element.style.backgroundSize = 'contain';
                element.style.backgroundRepeat = 'no-repeat';
                element.style.backgroundPosition = 'center';
                element.style.animation = 'none';
                element.textContent = '';
                element.style.backgroundColor = '';
            } else {
                element.style.backgroundImage = '';
                element.style.animation = 'none';
                element.style.backgroundSize = '';
                element.style.backgroundPosition = '';
                element.textContent = slide;
                element.classList.add('text-slide');
                element.style.backgroundColor = 'rgba(0, 0, 0, 0.4)';
            }
        }



        function changeSlide() {
            const nextIndex = (currentIndex + 1) % slides.length;
            const nextSlideValue = slides[nextIndex];
            setSlideContent(nextSlide, nextSlideValue);
            nextSlide.style.opacity = '0';

            currentSlide.style.transform = 'translate(-50%, -50%) scale(1)';
            nextSlide.style.transform = 'translate(-50%, -50%) scale(0.9)';

            nextSlide.style.transition = 'opacity 0.5s ease-in-out, transform 0.5s ease-in-out';
            currentSlide.style.transition = 'opacity 0.5s ease-in-out, transform 0.5s ease-in-out';

            void nextSlide.offsetWidth;

            nextSlide.style.opacity = '1';
            currentSlide.style.opacity = '0';
            nextSlide.style.transform = 'translate(-50%, -50%) scale(1)';
            currentSlide.style.transform = 'translate(-50%, -50%) scale(0.9)';

            setTimeout(() => {
                let temp = currentSlide;
                currentSlide = nextSlide;
                nextSlide = temp;

                currentSlide.style.opacity = '1';
                nextSlide.style.opacity = '0';

                currentSlide.style.transform = 'translate(-50%, -50%) scale(1)';
                nextSlide.style.transform = 'translate(-50%, -50%) scale(0.9)';

                currentIndex = nextIndex;

                requestAnimationFrame(() => {
                    currentSlide.style.transition = 'opacity 0.5s ease-in-out, transform 0.5s ease-in-out';
                    nextSlide.style.transition = 'opacity 0.5s ease-in-out, transform 0.5s ease-in-out';
                });
            }, 500);
        }

        function startSlideshow() {
            if (intervalId) clearInterval(intervalId);
            if (slides.length > 1) {
                intervalId = setInterval(changeSlide, 5000);
            }
        }

        function preloadAllImages(slidesArray) {
            slidesArray.forEach(slide => {
                if (isImage(slide)) {
                    const img = new Image();
                    img.src = getImageUrl(slide);
                }
            });
        }

        socket.on("wmark_slides", (data) => {
            slides = data.slides && data.slides.length > 0 ? data.slides : ['wmark.png'];
            preloadAllImages(slides);
            currentIndex = 0;
            setSlideContent(currentSlide, slides[0]);
            startSlideshow();
        });

        socket.on('connect', () => {
            socket.emit('init_client');
        });
    </script>
</body>

</html>