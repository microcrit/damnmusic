<!DOCTYPE html>
<html>
<head>
    <title>Twitch Chat</title>
    <meta charset="UTF-8">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.8.1/socket.io.js" integrity="sha512-8BHxHDLsOHx+flIrQ0DrZcea7MkHqRU5GbTHmbdzMRnAaoCIkZ97PqZcXJkKZckMMhqfoeaJE+DNUVuyoQsO3Q==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
</head>
<body>
    <div class="grandinfo">
        <div class="info show">
            <div class="header">
                <div class="head">
                    <div class="twitch-logo"></div>
                    <div class="title channel-name" id="channel-name"></div>
                </div>
            </div>
            <div class="chat-container" id="chat-container">
            </div>
        </div>
    </div>
    <style>
        * {
            box-sizing: border-box;
        }

        body {
            background: transparent;
            color: white;
            border: 0 transparent;
            padding: 0;
            margin: 0;
            text-align: center;
            overflow: hidden;
            font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", "Roboto", "Oxygen", "Ubuntu", sans-serif;
            font-weight: 400;
            display: flex;
            justify-content: center;
            align-items: center;
            width: 100vw;
            height: 100vh;
            letter-spacing: -0.02em;
        }

        @keyframes mesh-gradient {
            0% {
                background-position: 0% 50%;
            }
            25% {
                background-position: 50% 100%;
            }
            50% {
                background-position: 100% 50%;
            }
            75% {
                background-position: 50% 0%;
            }
            100% {
                background-position: 0% 50%;
            }
        }

        @keyframes slide-in-up {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        @keyframes fade-in {
            from {
                opacity: 0;
            }
            to {
                opacity: 1;
            }
        }

        .grandinfo {
            position: relative;
            width: 100%;
            height: 100%;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .info {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: flex-start;
            width: 90vw;
            height: 90vh;
            
            padding: 24px;
            position: relative;
            overflow: hidden;
            transform-origin: center center;

            background-color: rgb(30, 30, 30);
            background-image:
                radial-gradient(at 40% 20%, hsla(200,100%,74%,1) 0px, transparent 50%),
                radial-gradient(at 80% 0%, hsla(180,100%,56%,1) 0px, transparent 50%),
                radial-gradient(at 0% 50%, hsla(160,100%,72%,1) 0px, transparent 50%),
                radial-gradient(at 80% 50%, hsla(220,100%,76%,1) 0px, transparent 50%),
                radial-gradient(at 0% 100%, hsla(200,100%,77%,1) 0px, transparent 50%),
                radial-gradient(at 80% 100%, hsla(160,100%,81%,1) 0px, transparent 50%),
                radial-gradient(at 0% 0%, hsla(180,100%,76%,1) 0px, transparent 50%);
            background-size: 200% 200%;
            animation: mesh-gradient 16s ease-in-out infinite;
            
            border: 4px solid rgba(255, 255, 255, 0.4);
            opacity: 1;
        }

        .info.show {
            opacity: 1;
        }

        .info.hide {
            opacity: 0;
            pointer-events: none;
        }

        .header {
            width: 100%;
            text-align: center;
            margin-bottom: 16px;
            z-index: 2;
            animation: fade-in 0.6s ease-out;
        }

        .head {
            display: flex;
            align-items: center;
            justify-content: center;
            flex-direction: row;
            gap: 12px;
            margin-bottom: 8px;
        }

        .twitch-logo {
            width: 32px;
            height: 32px;
            background: url('https://static.twitchcdn.net/assets/favicon-32-e29e246c157142c94346.png') no-repeat center center;
            background-size: contain;
        }

        .title {
            font-size: 3rem;
            font-weight: 900;
            background: linear-gradient(135deg, #ffffff 0%, rgba(255, 255, 255, 0.8) 100%);
            -webkit-background-clip: text;
            background-clip: text;
            -webkit-text-fill-color: transparent;
            margin: 0 0 12px 0;
            letter-spacing: -0.03em;
        }

        .chat-container {
            width: 100%;
            flex: 1;
            overflow-y: auto;
            overflow-x: hidden;
            display: flex;
            flex-direction: column;
            gap: 4px;
            padding: 16px;
            z-index: 2;
            scroll-behavior: smooth;
            scrollbar-width: 0 0;
            scrollbar-color: transparent transparent;
        }

        .chat-container::-webkit-scrollbar {
            width: 0px;
            background: transparent;
        }

        .chat-container::-webkit-scrollbar-track {
            background: transparent;
        }

        .chat-message {
            text-align: left;
            animation: slide-in-up 0.4s cubic-bezier(0.34, 1.56, 0.64, 1);
            margin-bottom: 8px;
        }
        .message-user {
            font-weight: 700;
            font-size: 1.3rem;
            color: white;
            margin-bottom: 6px;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .user-badge {
            display: inline-block;
            padding: 2px 8px;
            background: rgba(255, 255, 255, 0.2);
            border-radius: 4px;
            font-size: 0.75rem;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .message-text {
            font-size: 1.2rem;
            color: white;
            line-height: 1.5;
            word-wrap: break-word;
        }

        .message-timestamp {
            font-size: 1rem;
            color: rgba(255, 255, 255, 0.7);
            margin-top: 4px;
            font-style: italic;
        }

        .no-messages {
            text-align: center;
            color: white;
            font-size: 1.4rem;
            font-style: italic;
            margin-top: 40px;
            animation: fade-in 1s ease-out;
        }

        @media (max-width: 768px) {
            .title {
                font-size: 2rem;
            }
            .message-user {
                font-size: 1.1rem;
            }
            .message-text {
                font-size: 1rem;
            }
            .message-timestamp {
                font-size: 0.9rem;
            }
        }

        @media (max-width: 480px) {
            .title {
                font-size: 1.5rem;
            }
            .message-user {
                font-size: 1rem;
            }
            .message-text {
                font-size: 0.9rem;
            }
            .message-timestamp {
                font-size: 0.8rem;
            }
            .chat-container {
                padding: 8px;
            }
        }
    </style>
    <script>
        let socket = io();
        const maxMessages = 50;
        let messageCount = 0;

        function formatTimestamp() {
            const now = new Date();
            return now.toLocaleTimeString('en-US', { 
                hour: '2-digit', 
                minute: '2-digit',
                second: '2-digit'
            });
        }

        function getUserColor(username) {
            let hash = 0;
            for (let i = 0; i < username.length; i++) {
                hash = username.charCodeAt(i) + ((hash << 5) - hash);
            }
            const hue = hash % 360;
            return `hsl(${hue}, 70%, 60%)`;
        }

        function addMessage(user, channel, message, scroll = true) {
            const container = document.getElementById('chat-container');
            
            const noMessages = container.querySelector('.no-messages');
            if (noMessages) {
                noMessages.remove();
            }

            const messageDiv = document.createElement('div');
            messageDiv.className = 'chat-message';
            
            const userColor = getUserColor(user);
            
            messageDiv.innerHTML = `
                <div class="message-user" style="color: ${userColor};">
                    <span>${user}:</span>
                </div>
                <div class="message-text">${escapeHtml(message)}</div>
                <div class="message-timestamp">${formatTimestamp()}</div>
            `;
            
            container.appendChild(messageDiv);
            messageCount++;
            
            if (scroll) {
                messageDiv.scrollIntoView({ behavior: 'smooth', block: 'end' });
            }
            
            if (messageCount > maxMessages) {
                const firstMessage = container.querySelector('.chat-message');
                if (firstMessage) {
                    firstMessage.remove();
                    messageCount--;
                }
            }
        }

        function escapeHtml(text) {
            const div = document.createElement('div');
            div.textContent = text;
            return div.innerHTML;
        }

        socket.on('connect', () => {
            console.log('Connected to server');
            socket.emit('init_client');
        });

        socket.on('channel_info', (data) => {
            const channelNameEl = document.getElementById('channel-name');
            channelNameEl.textContent = "@" + data.channel;
        });

        socket.on('chat_history', (history) => {
            history.forEach(msg => addMessage(msg.user, msg.channel, msg.message, msg.emotes, false));
            if (history.length > 0) {
                const container = document.getElementById('chat-container');
                const lastMsg = container.lastElementChild;
                if (lastMsg && lastMsg.classList.contains('chat-message')) {
                    lastMsg.scrollIntoView({ behavior: 'smooth', block: 'end' });
                }
            }
        });

        socket.on('chat_message', (data) => {
            console.log('Chat message received:', data);
            addMessage(data.user, data.channel, data.message, data.emotes);
            
            const channelNameEl = document.getElementById('channel-name');
            if (!channelNameEl.textContent && data.channel) {
                channelNameEl.textContent = "@" + data.channel;
            }
        });

        window.addEventListener('DOMContentLoaded', () => {
            const container = document.getElementById('chat-container');
            const noMessages = document.createElement('div');
            noMessages.className = 'no-messages';
            noMessages.textContent = 'Waiting for chat messages...';
            container.appendChild(noMessages);
        });
    </script>
</body>
</html>
